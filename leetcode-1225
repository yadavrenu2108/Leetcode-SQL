1225. Report Contiguous Dates
Table: Failed

+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| fail_date    | date    |
+--------------+---------+
Primary key for this table is fail_date.
Failed table contains the days of failed tasks.
Table: Succeeded

+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| success_date | date    |
+--------------+---------+
Primary key for this table is success_date.
Succeeded table contains the days of succeeded tasks.
 

A system is running one task every day. Every task is independent of the previous tasks. The tasks can fail or succeed.


Write an SQL query to generate a report of period_state for each continuous interval of days in the period from 2019-01-01 to 2019-12-31.

period_state is 'failed' if tasks in this interval failed or 'succeeded' if tasks in this interval succeeded. Interval of days are retrieved as start_date and end_date.

Order result by start_date.

The query result format is in the following example:

Failed table:
+-------------------+
| fail_date         |
+-------------------+
| 2018-12-28        |
| 2018-12-29        |
| 2019-01-04        |
| 2019-01-05        |
+-------------------+

Succeeded table:
+-------------------+
| success_date      |
+-------------------+
| 2018-12-30        |
| 2018-12-31        |
| 2019-01-01        |
| 2019-01-02        |
| 2019-01-03        |
| 2019-01-06        |
+-------------------+


Result table:
+--------------+--------------+--------------+
| period_state | start_date   | end_date     |
+--------------+--------------+--------------+
| succeeded    | 2019-01-01   | 2019-01-03   |
| failed       | 2019-01-04   | 2019-01-05   |
| succeeded    | 2019-01-06   | 2019-01-06   |
+--------------+--------------+--------------+

The report ignored the system state in 2018 as we care about the system in the period 2019-01-01 to 2019-12-31.
From 2019-01-01 to 2019-01-03 all tasks succeeded and the system state was "succeeded".
From 2019-01-04 to 2019-01-05 all tasks failed and system state was "failed".
From 2019-01-06 to 2019-01-06 all tasks succeeded and system state was "succeeded".
Difficulty:
Hard
Lock:
Prime
Company:
Facebook


SOLUTION::::::
create table failed(fail_date date);
insert into failed values( '2018-12-28'        );
insert into failed values( '2018-12-29'        );
insert into failed values( '2019-01-04'        );
insert into failed values( '2019-01-05'        );


CREATE TABLE succeeded(success_date date);
insert into succeeded values('2018-12-30');
insert into succeeded values('2018-12-31');
insert into succeeded values('2019-01-01');
insert into succeeded values('2019-01-02');
insert into succeeded values('2019-01-03');
insert into succeeded values('2019-01-06');




with t1 as (Select 'failed' as state, fail_date as dt from failed UNION ALL  Select 'success' as state, success_date as dt from Succeeded),
t2 as (select * , case when lagged_state = state then 0 else 1 end as diff  from(select dt, state ,lag(state) over(order by dt) as lagged_state from t1 where dt >= '2019-01-01' and dt <= '2019-12-31')sub),
t3 as (select *, sum(diff) over ( order by dt) as num from t2)
select max(state), min(dt), max(dt) from t3 group by num;
 
